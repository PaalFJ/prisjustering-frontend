// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PrisjusteringProsjekt.Models.Behandlingsmetode", b =>
                {
                    b.Property<int>("BehandlingsMetodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BehandlingsMetodeId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("BehandlingsMetodeId");

                    b.ToTable("Behandlingsmetoder");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.Container", b =>
                {
                    b.Property<int>("ContainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ContainerId"));

                    b.Property<bool>("Aktiv")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ContainerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Notat")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("Volum")
                        .HasColumnType("double");

                    b.HasKey("ContainerId");

                    b.HasIndex("ContainerTypeId");

                    b.ToTable("Containere");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.ContainerType", b =>
                {
                    b.Property<int>("ContainerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ContainerTypeId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ContainerTypeId");

                    b.ToTable("ContainerTyper");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.Enhet", b =>
                {
                    b.Property<int>("EnhetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EnhetId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("EnhetId");

                    b.ToTable("Enheter");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.Fraksjon", b =>
                {
                    b.Property<int>("FraksjonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FraksjonId"));

                    b.Property<bool>("Aktiv")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("BehandlingsmetodeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EnhetId")
                        .HasColumnType("int");

                    b.Property<bool>("FarligAvfall")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("FraksjonsgruppeId")
                        .HasColumnType("int");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Notat")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("VarenummerInternt")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VarenummerNS")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("FraksjonId");

                    b.HasIndex("BehandlingsmetodeId");

                    b.HasIndex("EnhetId");

                    b.HasIndex("FraksjonsgruppeId");

                    b.ToTable("Fraksjoner");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.Fraksjonsgruppe", b =>
                {
                    b.Property<int>("FraksjonsgruppeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FraksjonsgruppeId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("FraksjonsgruppeId");

                    b.ToTable("Fraksjonsgrupper");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.Leie", b =>
                {
                    b.Property<int>("LeieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LeieId"));

                    b.Property<bool>("Aktiv")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ContainerId")
                        .HasColumnType("int");

                    b.Property<int?>("ContainerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EnhetId")
                        .HasColumnType("int");

                    b.Property<int?>("LeverandorId")
                        .HasColumnType("int");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Notat")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("LeieId");

                    b.HasIndex("ContainerId");

                    b.HasIndex("ContainerTypeId");

                    b.HasIndex("EnhetId");

                    b.HasIndex("LeverandorId");

                    b.ToTable("Leier");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.Leverandor", b =>
                {
                    b.Property<int>("LeverandorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LeverandorId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Notat")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("LeverandorId");

                    b.ToTable("Leverandorer");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.Mottak", b =>
                {
                    b.Property<int>("MottakId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MottakId"));

                    b.Property<string>("Adresse")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Postnummer")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Sted")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("MottakId");

                    b.ToTable("Mottak");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.Prislinje", b =>
                {
                    b.Property<int>("PrislinjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrislinjeId"));

                    b.Property<decimal>("AdministrasjonsPris")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("AdministrasjonsProsent")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("AndreKostnader")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("BrukManuellVeiledendePris")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("BrukProsentbasertVeiledendePris")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ContainerId")
                        .HasColumnType("int");

                    b.Property<int?>("ContainerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FraksjonId")
                        .HasColumnType("int");

                    b.Property<int?>("GebyrId")
                        .HasColumnType("int");

                    b.Property<string>("Kommentar")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Kostpris1")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Kostpris2")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("LeieId")
                        .HasColumnType("int");

                    b.Property<int?>("LeverandorId")
                        .HasColumnType("int");

                    b.Property<int>("MottakId")
                        .HasColumnType("int");

                    b.Property<string>("Notat")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("PrisBomavgift")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PrisKverning")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PrisLeverandor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PrisOmlasting")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PrisPressing")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PrisSortering")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PrisStatsavgift")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PrisTransportSluttbehandling")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("SalgsvareId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SluttDato")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDato")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("TransportId")
                        .HasColumnType("int");

                    b.Property<int?>("TransportorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("VeiledendePris")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("VeiledendeProsent")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("PrislinjeId");

                    b.HasIndex("ContainerId");

                    b.HasIndex("ContainerTypeId");

                    b.HasIndex("FraksjonId");

                    b.HasIndex("LeieId");

                    b.HasIndex("LeverandorId");

                    b.HasIndex("MottakId");

                    b.HasIndex("TransportorId");

                    b.ToTable("Prislinjer");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.PrislinjeHistorikk", b =>
                {
                    b.Property<int>("PrislinjeHistorikkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrislinjeHistorikkId"));

                    b.Property<decimal>("AdministrasjonsPris")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("AdministrasjonsProsent")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("AndreKostnader")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("BrukManuellVeiledendePris")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("BrukProsentbasertVeiledendePris")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ContainerId")
                        .HasColumnType("int");

                    b.Property<int?>("ContainerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EndretAv")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndretTidspunkt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EndringsNotat")
                        .HasColumnType("longtext");

                    b.Property<int>("Endringstype")
                        .HasColumnType("int");

                    b.Property<int?>("FraksjonId")
                        .HasColumnType("int");

                    b.Property<int?>("GebyrId")
                        .HasColumnType("int");

                    b.Property<string>("Kommentar")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Kostpris1")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Kostpris2")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("LeieId")
                        .HasColumnType("int");

                    b.Property<int?>("LeverandorId")
                        .HasColumnType("int");

                    b.Property<int>("MottakId")
                        .HasColumnType("int");

                    b.Property<string>("Notat")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("PrisBomavgift")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PrisKverning")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PrisLeverandor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PrisOmlasting")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PrisPressing")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PrisSortering")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PrisStatsavgift")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("PrisTransportSluttbehandling")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("PrislinjeId")
                        .HasColumnType("int");

                    b.Property<int?>("SalgsvareId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SluttDato")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDato")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("TransportId")
                        .HasColumnType("int");

                    b.Property<int?>("TransportorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("VeiledendePris")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("VeiledendeProsent")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("PrislinjeHistorikkId");

                    b.ToTable("PrislinjeHistorikk");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.Transportor", b =>
                {
                    b.Property<int>("TransportorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TransportorId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Notat")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("TransportorId");

                    b.ToTable("Transportorer");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.Container", b =>
                {
                    b.HasOne("PrisjusteringProsjekt.Models.ContainerType", "ContainerType")
                        .WithMany()
                        .HasForeignKey("ContainerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContainerType");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.Fraksjon", b =>
                {
                    b.HasOne("PrisjusteringProsjekt.Models.Behandlingsmetode", "Behandlingsmetode")
                        .WithMany()
                        .HasForeignKey("BehandlingsmetodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrisjusteringProsjekt.Models.Enhet", "Enhet")
                        .WithMany()
                        .HasForeignKey("EnhetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrisjusteringProsjekt.Models.Fraksjonsgruppe", "Fraksjonsgruppe")
                        .WithMany()
                        .HasForeignKey("FraksjonsgruppeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Behandlingsmetode");

                    b.Navigation("Enhet");

                    b.Navigation("Fraksjonsgruppe");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.Leie", b =>
                {
                    b.HasOne("PrisjusteringProsjekt.Models.Container", "Container")
                        .WithMany()
                        .HasForeignKey("ContainerId");

                    b.HasOne("PrisjusteringProsjekt.Models.ContainerType", "ContainerType")
                        .WithMany()
                        .HasForeignKey("ContainerTypeId");

                    b.HasOne("PrisjusteringProsjekt.Models.Enhet", "Enhet")
                        .WithMany()
                        .HasForeignKey("EnhetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrisjusteringProsjekt.Models.Leverandor", "Leverandor")
                        .WithMany()
                        .HasForeignKey("LeverandorId");

                    b.Navigation("Container");

                    b.Navigation("ContainerType");

                    b.Navigation("Enhet");

                    b.Navigation("Leverandor");
                });

            modelBuilder.Entity("PrisjusteringProsjekt.Models.Prislinje", b =>
                {
                    b.HasOne("PrisjusteringProsjekt.Models.Container", "Container")
                        .WithMany()
                        .HasForeignKey("ContainerId");

                    b.HasOne("PrisjusteringProsjekt.Models.ContainerType", "ContainerType")
                        .WithMany()
                        .HasForeignKey("ContainerTypeId");

                    b.HasOne("PrisjusteringProsjekt.Models.Fraksjon", "Fraksjon")
                        .WithMany()
                        .HasForeignKey("FraksjonId");

                    b.HasOne("PrisjusteringProsjekt.Models.Leie", "Leie")
                        .WithMany()
                        .HasForeignKey("LeieId");

                    b.HasOne("PrisjusteringProsjekt.Models.Leverandor", "Leverandor")
                        .WithMany()
                        .HasForeignKey("LeverandorId");

                    b.HasOne("PrisjusteringProsjekt.Models.Mottak", "Mottak")
                        .WithMany()
                        .HasForeignKey("MottakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrisjusteringProsjekt.Models.Transportor", "Transportor")
                        .WithMany()
                        .HasForeignKey("TransportorId");

                    b.Navigation("Container");

                    b.Navigation("ContainerType");

                    b.Navigation("Fraksjon");

                    b.Navigation("Leie");

                    b.Navigation("Leverandor");

                    b.Navigation("Mottak");

                    b.Navigation("Transportor");
                });
#pragma warning restore 612, 618
        }
    }
}
